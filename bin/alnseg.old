#!/usr/bin/perl -w
use FAST::Bio::AlignIO;
use FAST::Bio::UnivAln;
use Getopt::Std;
use vars qw($VERSION $DESC $tag);
$VERSION = 0.2;
$DESC    = "Extract only variable sites from an alignment\n";

# PROCESS Command-line options:
$opt_h      = undef;
$opt_f      = 'fasta';
$opt_i      = undef;
&getopts('hf:i');

$opt_h and do { 
    &print_help;
    die;
};

$stream = FAST::Bio::AlignIO->newFh(-fh => *STDIN{IO}, -format => "$opt_f"); # read from standard input
while ( my $saln = <$stream> ) {
  my @seqs = $saln->each_seq();
  my $aln  = FAST::Bio::UnivAln->new('-seqs' => \@seqs);

  if ($opt_i) {
    $inds = $aln->var_inds();
    print STDERR join ' ',@{$inds},"\n";
  }
  $subaln = new FAST::Bio::UnivAln(-seqs=>scalar($aln->var_sites()), -row_ids=>$aln->row_ids);
  $subaln->ffmt($opt_f); 
  $layout = $subaln->layout();
  ## FIX FASTA PRINT BUG (IDs SHOULD GO RIGHT AFTER '>') 
  if ($opt_f =~ /fasta/i) {
    $layout =~ s/^>\s+/>/gm;
  }
  print "$layout\n";
}

#-----------------------
sub print_help {
#-----------------------
    print STDERR << "QQ_HELP_QQ";
    
$0 version $VERSION
$DESC
Usage: $0 [-hi] [-f <format>] < 'alignment-file'   > alignment-file
 args: none.
 opts: -h        this help 
       -i        print indices of variable sites in alignment coordinates to STDERR
       -f <string> input-format for subalignment. Default is fasta.
                   For alternatives, see 'layout' function of FAST::Bio::UnivAln.
input: alignments on STDIN
outpt: alignments on STDOUT

QQ_HELP_QQ
}











 





