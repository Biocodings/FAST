#!/Users/travislawrence/perl5/perlbrew/perls/perl-5.18.2/bin/perl -w

eval 'exec /Users/travislawrence/perl5/perlbrew/perls/perl-5.18.2/bin/perl -w -S $0 ${1+"$@"}'
    if 0; # not running under some shell
use Getopt::Std;
use FAST::Bio::AlignIO;
use FAST::Bio::SimpleAlign;

use vars qw($VERSION $DESC $dnastrict $rnastrict $proteinstrict );
$VERSION = 0.1;
$DESC    = "Enforces strict molecular type alphabet conformance in sequences, remapping offending characters.\n";

$opt_h      = undef; #help
$opt_f      = 'fasta'; #format
$opt_m      = undef; #moltype
$opt_s      = undef; #force strict
$opt_i      = undef; #force iupac
$opt_u      = undef; #force uppercase'
$opt_c      = undef; #replace chars with c

&getopts('hf:m:siulc:');
$opt_h or (@ARGV > 2) and do { 
    &print_help;
    die;
};
$opt_m and do { 
  die "USAGE: $0 -m [dna|rna|protein]\n" if ('dna protein rna' !~ /$opt_m/);
};

## TO GO INTO DICTIONARY
$strict{'dna'}     = '[^ACTGactg-]';
$iupac{'dna'}      = '[^ACTGactgMRWSYKVHDBXNmrwsykvhdbxn-]';
$strict{'rna'}     = '[^ACUGacug-]';
$iupac{'rna'}      = '[^ACUGacugMRWSYKVHDBXNmrwsykvhdbxn-]';
$strict{'protein'} = '[^ACDEFGHIKLMNPQRSTVWYacdefghiklmnpqrstvwy-]';
$iupac{'protein'}  = '[^ACDEFGHIKLMNPQRSTVWYacdefghiklmnpqrstvwyBZX\.bzx\*-]';


$ambig{'dna'} = 'N';
$ambig{'rna'} = 'N';
$ambig{'protein'} = 'X';


my $IN   = FAST::Bio::AlignIO->newFh(-fh => \*STDIN, '-format' => "fasta");
$OUT  = FAST::Bio::AlignIO->newFh('-format' => "fasta");

while(my $aln = <$IN>) {
  my @seqs = $aln->each_seq();
  my $moltype = $opt_m || $seqs[0]->alphabet;
  print STDERR "Molecular type is ",$moltype,"\n";
  foreach my $seq ($aln->each_seq()) {
    $seq->alphabet($opt_m) if ($opt_m);
  }
  my $ambig = $opt_c || $ambig{$moltype};
  if ($opt_s) {
    $aln->map_chars($strict{$moltype},$ambig);
  }
  elsif ($opt_i) {
    $aln->map_chars($iupac{$moltype},$ambig);
  }
  $aln->uppercase if ($opt_u);
  
  $aln->set_displayname_flat;
  print $OUT $aln;
}




#-----------------------
sub print_help {
#-----------------------
    print STDERR << "QQ_HELP_QQ";
    
$0 version $VERSION
$DESC
Usage: $0 [-hisu] [-m moltype] [-f <file-format>] < <seq-file>
   or: cat <seq-files> | $0 [-htpisc] [-m moltype] [-f <file-format>] 
 opts: -h this help 
       -f file format (default is fasta). Options are:

                       Fasta       FASTA format
                       EMBL        EMBL format
                       GenBank     GenBank format
                       swiss       Swissprot format
                       SCF         SCF tracefile format
                       PIR         Protein Information Resource format
                       GCG         GCG format
                       raw         Raw format (one sequence per line, no ID)
                       ace         ACeDB sequence format
			 
			 various case-spellings are allowed
       
       -s strict alphabet (only unambiguous sense monomers counted)
       -i iupac  alphabet (ambiguity and stop codes counted, -s overrides)
       -m force moltype [dna,rna,protein] (only affects behavior with a -s or -i flag)
       -u uppercase seqs
       -c <char> replace ambiguous characters with <char> instead of 'N' or 'X'

 args: none. Multiple sequence files are read ftom <stdin>.
 returns: to <stdout> 

It is a good idea to set the moltype explicitly
Example: setting all characters other than {A C T G} to the gap character '-':

cat seq.fas | seqstrict -m dna -sc - > seq.strict.fas

QQ_HELP_QQ
}














